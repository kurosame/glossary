references:
  commands:
    setup-docker: &setup-docker
      docker:
        - image: kurosame/circleci-node

version: 2
jobs:
  build-deploy:
    <<: *setup-docker
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install
          command: yarn install
      - save_cache:
          name: Cache dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Build
          command: yarn build:production
      - run:
          name: Deploy
          command: ./node_modules/.bin/firebase deploy --only hosting --project $FIREBASE_PROJECT --token $FIREBASE_TOKEN
  test:
    <<: *setup-docker
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install
          command: yarn install
      - save_cache:
          name: Cache dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Test for CI
          command: yarn test:ci
      - store_artifacts:
          path: ./test/unit/coverage
  e2e:
    <<: *setup-docker
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install
          command: yarn install
      - save_cache:
          name: Cache dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: E2E Test for CI
          command: yarn e2e:ci
      - store_artifacts:
          path: ./test/e2e/specs/__screenshots__
  outdated:
    <<: *setup-docker
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install
          command: yarn install
      - save_cache:
          name: Cache dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Outdated
          command: |
            PAYLOAD=`cat << EOF
            {
              "attachments": [
                {
                  "pretext": "glossary's outdated",
                  "text": '$(yarn outdated --json | $(yarn bin)/format-yarn-outdated)',
                  "mrkdwn_in": ["text"]
                }
              ]
            }
            EOF`
            curl -X POST -d "payload=$PAYLOAD" $SLACK_WEBHOOK_URL
  lighthouse:
    <<: *setup-docker
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install
          command: yarn install
      - save_cache:
          name: Cache dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Lighthouse
          command: ./node_modules/.bin/lighthouse --chrome-flags="--headless" --output-path=./lighthouse-results.html https://github.com/
      - store_artifacts:
          path: ./lighthouse-results.html
      - run:
          name: Send to Slack
          command: curl -X POST -d "payload=https://$BUILD_ID-$REPO_ID-gh.circle-artifacts.com/0/root/project/lighthouse-results.html" $SLACK_WEBHOOK_URL

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-deploy:
          filters:
            branches:
              only:
                - master
  test:
    jobs:
      - test
      - e2e
  nightly:
    triggers:
      - schedule:
          cron: '17 * * * *'
          filters:
            branches:
              only:
                - master
    jobs:
      - outdated
      - lighthouse
