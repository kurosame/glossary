references:
  commands:
    setup-docker-base: &setup-docker-base
      docker:
        - image: circleci/node:10.17.0
    setup-docker-lighthouse: &setup-docker-lighthouse
      docker:
        - image: circleci/node:10.17.0-browsers
    setup-docker-gcloud: &setup-docker-gcloud
      docker:
        - image: google/cloud-sdk

version: 2
jobs:
  deploy:
    <<: *setup-docker-base
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            - v2-dependencies-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          name: Cache dependencies
          paths:
            - ~/.npm
          key: v2-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Build
          command: npm run build:production
      - run:
          name: Deploy
          command: ./node_modules/.bin/firebase deploy --only hosting --project $FIREBASE_PROJECT
  deploy-functions:
    <<: *setup-docker-base
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v2-dependencies-{{ checksum "./functions/package-lock.json" }}
            - v2-dependencies-
      - run:
          name: Install dependencies
          working_directory: ./functions
          command: npm ci
      - save_cache:
          name: Cache dependencies
          paths:
            - ~/.npm
          key: v2-dependencies-{{ checksum "./functions/package-lock.json" }}
      - run:
          name: Build
          working_directory: ./functions
          command: npm run build
      - run:
          name: Deploy
          working_directory: ./functions
          command: ./node_modules/.bin/firebase deploy --only functions --project $FIREBASE_PROJECT
  deploy-raw-data:
    <<: *setup-docker-gcloud
    steps:
      - checkout
      - run:
          name: Deploy to raw-data
          command: |
            echo $GCLOUD_SERVICE_KEY > /tmp/gcloud-service-key.json
            gcloud auth activate-service-account --key-file /tmp/gcloud-service-key.json
            IFS_BEFORE=$IFS
            IFS=$'\n'
            UP_FILES=$(git diff HEAD^ | grep -E '^\+\+\+.+raw-data/.+\.md' | sed -e 's/.*raw-data/\.\/raw-data/' || true)
            if [ -z "$UP_FILES" ]; then
              exit 0
            fi
            for FILE in $UP_FILES; do
              echo $FILE | gsutil cp -I gs://glossary-kurosame.appspot.com/raw-data
            done
            IFS=$IFS_BEFORE
  test:
    <<: *setup-docker-base
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            - v2-dependencies-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          name: Cache dependencies
          paths:
            - ~/.npm
          key: v2-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Test for CI
          command: npm run test:ci
      - store_artifacts:
          path: ./test/unit/coverage
  test-functions:
    <<: *setup-docker-base
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v2-dependencies-{{ checksum "./functions/package-lock.json" }}
            - v2-dependencies-
      - run:
          name: Install dependencies
          working_directory: ./functions
          command: npm ci
      - save_cache:
          name: Cache dependencies
          paths:
            - ~/.npm
          key: v2-dependencies-{{ checksum "./functions/package-lock.json" }}
      - run:
          name: Test for CI
          working_directory: ./functions
          command: npm run test:ci
      - store_artifacts:
          path: ./functions/test/unit/coverage
  lighthouse:
    <<: *setup-docker-lighthouse
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            - v2-dependencies-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          name: Cache dependencies
          paths:
            - ~/.npm
          key: v2-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Lighthouse
          command: ./node_modules/.bin/lighthouse --chrome-flags="--headless --no-sandbox" --output-path=./lighthouse-results.html $GLOSSARY_APP_URL
      - store_artifacts:
          path: ./lighthouse-results.html
      - run:
          name: Send to Slack
          command: |
            PAYLOAD=`cat << EOF
            {
              "attachments": [
                {
                  "pretext": "glossary's Lighthouse",
                  "text": "https://${CIRCLE_BUILD_NUM}-${CIRCLE_CI_REPOSITORY_ID}-gh.circle-artifacts.com/0/lighthouse-results.html",
                }
              ]
            }
            EOF`
            curl -X POST -d "payload=$PAYLOAD" $SLACK_WEBHOOK_URL

workflows:
  version: 2
  deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only:
                - master
      - deploy-functions:
          filters:
            branches:
              only:
                - master
      - deploy-raw-data:
          filters:
            branches:
              only:
                - master
  test:
    jobs:
      - test
      - test-functions
  nightly:
    triggers:
      - schedule:
          cron: '00 0 * * 1'
          filters:
            branches:
              only:
                - master
    jobs:
      - lighthouse
