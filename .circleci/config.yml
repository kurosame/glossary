references:
  commands:
    setup-docker-base: &setup-docker-base
      docker:
        - image: kurosame/circleci-node
    setup-docker-gcloud: &setup-docker-gcloud
      docker:
        - image: google/cloud-sdk

version: 2
jobs:
  build-deploy:
    <<: *setup-docker-base
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install
          command: yarn install
      - save_cache:
          name: Cache dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Build
          command: yarn build:production
      - run:
          name: Deploy
          command: ./node_modules/.bin/firebase deploy --only hosting --project $FIREBASE_PROJECT --token $FIREBASE_TOKEN
  deploy-raw-data:
    <<: *setup-docker-gcloud
    steps:
      - checkout
      - run:
          name: Deploy to raw-data
          command: |
            echo $GCLOUD_SERVICE_KEY > /tmp/gcloud-service-key.json
            gcloud auth activate-service-account --key-file /tmp/gcloud-service-key.json
            UP_FILES=$(git diff HEAD^ | grep -E '^\+\+\+.+raw-data/.+\.md' | sed -e 's/.*raw-data\///')
            if [ -z "$UP_FILES" ]; then
              exit 0
            fi
            for FILE in "$UP_FILES"
            do
              gsutil cp "./raw-data/${FILE}" gs://glossary-kurosame.appspot.com/raw-data
            done
  test:
    <<: *setup-docker-base
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install
          command: yarn install
      - save_cache:
          name: Cache dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Test for CI
          command: yarn test:ci
      - store_artifacts:
          path: ./test/unit/coverage
  e2e:
    <<: *setup-docker-base
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install
          command: yarn install
      - save_cache:
          name: Cache dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: E2E Test for CI
          command: yarn e2e:ci
      - store_artifacts:
          path: ./test/e2e/specs/__screenshots__
  outdated:
    <<: *setup-docker-base
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install
          command: yarn install
      - save_cache:
          name: Cache dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Outdated
          command: |
            PAYLOAD=`cat << EOF
            {
              "attachments": [
                {
                  "pretext": "glossary's Outdated",
                  "text": '$(yarn outdated --json | $(yarn bin)/format-yarn-outdated)',
                  "mrkdwn_in": ["text"]
                }
              ]
            }
            EOF`
            curl -X POST -d "payload=$PAYLOAD" $SLACK_WEBHOOK_URL
  lighthouse:
    <<: *setup-docker-base
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install
          command: yarn install
      - save_cache:
          name: Cache dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Lighthouse
          command: ./node_modules/.bin/lighthouse --chrome-flags="--headless --no-sandbox" --output-path=./lighthouse-results.html $GLOSSARY_APP_URL
      - store_artifacts:
          path: ./lighthouse-results.html
      - run:
          name: Send to Slack
          command: |
            PAYLOAD=`cat << EOF
            {
              "attachments": [
                {
                  "pretext": "glossary's Lighthouse",
                  "text": "https://${CIRCLE_BUILD_NUM}-${CIRCLE_CI_REPOSITORY_ID}-gh.circle-artifacts.com/0/root/project/lighthouse-results.html",
                }
              ]
            }
            EOF`
            curl -X POST -d "payload=$PAYLOAD" $SLACK_WEBHOOK_URL

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-deploy:
          filters:
            branches:
              only:
                - master
      - deploy-raw-data:
          filters:
            branches:
              only:
                - master
  test:
    jobs:
      - test
      - e2e
  nightly:
    triggers:
      - schedule:
          cron: '00 0 * * 1'
          filters:
            branches:
              only:
                - master
    jobs:
      - outdated
      - lighthouse
